import pandas as pd
moma = pd.read_csv("moma.csv")
print(moma.info())

print(moma._data)

num_entries = moma.size
total_bytes = num_entries * 8
total_megabytes = total_bytes / 1048576

print(total_megabytes)

obj_cols = moma.select_dtypes(include=['object'])
obj_cols_mem = obj_cols.memory_usage(deep=True)
obj_cols_sum = obj_cols_mem.sum() / 1048576
print(obj_cols_sum)

def change_to_int(df, col_name):
    # Get the minimum and maximum values
    col_max = df[col_name].max()
    col_min = df[col_name].min()
    # Find the datatype
    for dtype_name in ['int8', 'int16', 'int32', 'int64']:
        # Check if this datatype can hold all values
        if col_max <  np.iinfo(dtype_name).max and col_min > np.iinfo(dtype_name).min:
            df[col_name] = df[col_name].astype(dtype_name)
            break

# Add you code below
float_moma = moma.select_dtypes(include=['float64'])
print(float_moma.isnull().sum())
# By running we got that ExhibitionSortOrder has no missing values
change_to_int(moma, 'ExhibitionSortOrder')
print(moma['ExhibitionSortOrder'].dtype)

float_cols = moma.select_dtypes(include=['float']).columns

# Write you code below
for col in float_cols:
    moma[col] = pd.to_numeric(moma[col], downcast='float')

moma["ExhibitionBeginDate"] = pd.to_datetime(moma["ExhibitionBeginDate"])
moma["ExhibitionEndDate"] = pd.to_datetime(moma["ExhibitionEndDate"])

print(moma[["ExhibitionBeginDate", "ExhibitionEndDate"]].memory_usage(deep=True))

for col in moma.select_dtypes(include=['object']):
    num_unique_values = len(moma[col].unique())
    num_total_values = len(moma[col])
    if num_unique_values / num_total_values < 0.5:
        moma[col] = moma[col].astype('category')
        
print(moma.info(memory_usage='deep'))

keep_cols = ['ExhibitionID', 'ExhibitionNumber', 'ExhibitionBeginDate', 'ExhibitionEndDate', 'ExhibitionSortOrder', 'ExhibitionRole', 'ConstituentType', 'DisplayName', 'Institution', 'Nationality', 'Gender']
moma = pd.read_csv("moma.csv", parse_dates=["ExhibitionBeginDate", "ExhibitionEndDate"], usecols=keep_cols)
print(moma.memory_usage(deep=True).sum()/(1024*1024))
